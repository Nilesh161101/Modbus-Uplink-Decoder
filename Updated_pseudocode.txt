START

TRY
    PROMPT "Please enter the number of endpoints present in the message frame:" AND READ number_of_endpoints AS INTEGER
CATCH ValueError
    PRINT "Invalid input. Please enter an integer."
    EXIT WITH ERROR CODE 1
END TRY

IF number_of_endpoints IS EQUAL TO 2 THEN
    PROMPT "Data Type for endpoint 0:" AND READ endpoint0_type
    PROMPT "Data Type for endpoint 1:" AND READ endpoint1_type
ELSE IF number_of_endpoints IS EQUAL TO 1 THEN
    PROMPT "Data Type for endpoint 0:" AND READ endpoint0_type
    SET endpoint1_type TO NULL
ELSE
    PRINT "Only 1 or 2 endpoints can be read currently"
    EXIT WITH ERROR CODE 1
END IF

FUNCTION decode_uplink(uplink)
    SET endpoint TO SUBSTRING uplink FROM 0 TO 2
    SET command_id TO SUBSTRING uplink FROM 2 TO 4
    SET cluster_id TO SUBSTRING uplink FROM 4 TO 8
    SET attribute_id TO SUBSTRING uplink FROM 8 TO 12
    SET attribute_type TO SUBSTRING uplink FROM 12 TO 14
    SET data_size TO SUBSTRING uplink FROM 14 TO 16
    SET data_descriptor TO SUBSTRING uplink FROM 16 TO 22
    SET data TO SUBSTRING uplink FROM 22 TO END

    IF endpoint IS NOT "11" THEN
        RETURN "Invalid endpoint"
    END IF
    IF command_id IS NOT "0a" THEN
        RETURN "Invalid CommandID"
    END IF
    IF cluster_id IS NOT "8009" THEN
        RETURN "Invalid ClusterID"
    END IF
    IF attribute_id IS NOT "0000" THEN
        RETURN "Invalid AttributeID"
    END IF
    IF attribute_type IS NOT "41" THEN
        RETURN "Invalid Attribute type"
    END IF

    IF number_of_endpoints IS EQUAL TO 2 THEN
        SET data_endpoint0 TO SUBSTRING data FROM 0 TO 16  // assuming 8 bytes for UINT64
        SET data_endpoint1 TO SUBSTRING data FROM 16 TO 24  // assuming 4 bytes for FLOAT32
        SET data_endpoint0_value TO extract_data_value(data_endpoint0, endpoint0_type)
        SET data_endpoint1_value TO extract_data_value(data_endpoint1, endpoint1_type)
        RETURN data_endpoint0_value, data_endpoint1_value
    ELSE IF number_of_endpoints IS EQUAL TO 1 THEN
        SET data_endpoint0 TO SUBSTRING data FROM 0 TO 16  // assuming 8 bytes for UINT64
        SET data_endpoint0_value TO extract_data_value(data_endpoint0, endpoint0_type)
        RETURN data_endpoint0_value, NULL
    ELSE
        RETURN "Unsupported number of endpoints"
    END IF
END FUNCTION

FUNCTION extract_data_value(data, data_type)
    IF data_type IS "UINT64" THEN
        SET value TO CONVERT data FROM HEXADECIMAL TO INTEGER
        RETURN value
    ELSE IF data_type IS "FLOAT32" THEN
        SET value TO CONVERT data FROM HEXADECIMAL TO FLOAT
        RETURN value
    ELSE
        RETURN "Invalid data type"
    END IF
END FUNCTION

WHILE TRUE
    PROMPT "Please enter the uplink: " AND READ payload
    SET register_values TO CALL decode_uplink WITH payload
    IF number_of_endpoints IS EQUAL TO 2 THEN
        SET register_value_endpoint0, register_value_endpoint1 TO register_values
        PRINT "Register value Endpoint 0:" register_value_endpoint0
        PRINT "Register value Endpoint 1:" register_value_endpoint1
    ELSE IF number_of_endpoints IS EQUAL TO 1 THEN
        SET register_value_endpoint0 TO register_values
        PRINT "Register value Endpoint 0:" register_value_endpoint0
    END IF

    PROMPT "Wish to continue decoding? (YES/NO): " AND READ cont
    IF UPPERCASE(cont) IS NOT "YES" THEN
        BREAK
    END IF
END WHILE

END
